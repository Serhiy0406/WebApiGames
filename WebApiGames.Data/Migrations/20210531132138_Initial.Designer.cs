// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiGames.Data;

namespace WebApiGames.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210531132138_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiGames.Data.Entities.BlogUsers", b =>
                {
                    b.Property<int>("BlogUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogUserId");

                    b.ToTable("BlogUsers");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Developers", b =>
                {
                    b.Property<int>("DeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Characteristic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeveloperId");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.GameBlogUser", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("BlogUserId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "BlogUserId");

                    b.HasIndex("BlogUserId");

                    b.ToTable("GameBlogUser");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.GameGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Games", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasPrecision(9, 2)
                        .HasColumnType("int");

                    b.Property<int>("CurrentDeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId");

                    b.HasIndex("CurrentDeveloperId");

                    b.HasIndex("CurrentPublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Genres", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Publishers", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfficialSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentGameId")
                        .HasColumnType("int");

                    b.Property<string>("E3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ECTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metacritic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RatingId");

                    b.HasIndex("CurrentGameId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.GameBlogUser", b =>
                {
                    b.HasOne("WebApiGames.Data.Entities.BlogUsers", "BlogUser")
                        .WithMany("GameBlogUsers")
                        .HasForeignKey("BlogUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiGames.Data.Entities.Games", "Game")
                        .WithMany("GameBlogUsers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogUser");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.GameGenre", b =>
                {
                    b.HasOne("WebApiGames.Data.Entities.Games", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiGames.Data.Entities.Genres", "Genre")
                        .WithMany("GameGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Games", b =>
                {
                    b.HasOne("WebApiGames.Data.Entities.Developers", "Developer")
                        .WithMany("Game")
                        .HasForeignKey("CurrentDeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiGames.Data.Entities.Publishers", "Publisher")
                        .WithMany("Game")
                        .HasForeignKey("CurrentPublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Ratings", b =>
                {
                    b.HasOne("WebApiGames.Data.Entities.Games", "Game")
                        .WithOne("Rating")
                        .HasForeignKey("WebApiGames.Data.Entities.Ratings", "CurrentGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.BlogUsers", b =>
                {
                    b.Navigation("GameBlogUsers");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Developers", b =>
                {
                    b.Navigation("Game");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Games", b =>
                {
                    b.Navigation("GameBlogUsers");

                    b.Navigation("GameGenres");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Genres", b =>
                {
                    b.Navigation("GameGenre");
                });

            modelBuilder.Entity("WebApiGames.Data.Entities.Publishers", b =>
                {
                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
